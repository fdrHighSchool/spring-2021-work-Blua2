import java.util.*;
public class GOL{
  private int[][] G;//Grid
  private int[][] N;//Neighbors

  public GOL(int row,int col){
        this.G = new int [row][col];
        this.N = new int [row][col];
        for (int r = 0; r < row; r++) {
            for (int c = 0; c < col; c++) {
                this.N[r][c] = 0;
            }
        }
    }// end of constructor

  public void printG( ){
    for (int i = 0; i < this.G.length;i++){
      System.out.println("/ln" + Arrays.toString(this.G[i]));
    }
  }

  public void printN( ){
    for (int i = 0; i < this.N.length;i++){
      System.out.println("/ln" + Arrays.toString(this.N[i]));
    }
  }

  public void cellGrow(int row, int col) {
        for (int r = 0; r < this.N.length; r++) {
            for (int c = 0; c < this.N[r].length; c++) {
                this.N[r][c] = 1;
            }
        }
    }//end of cellGrow

  public void countNeighbor() {
        for (int r = 0; r < this.G.length; r++) {
            for (int c = 0; c < this.G[r].length; c++) {
                for (int i = -1; i < 2; i++){
                    for(int j = -1; j < 2; j++){
                        if(this.G[r + i][c + j] == 1 ){
                          this.N[r][c]++; 
                        }
                    }
                }
            }
        }
    }//end of countNeighbor
  
    public void updateG(){
        countNeighbor();
        for (int r = 0; r < this.G.length; r++) {
            for (int c = 0; c < this.G[r].length; c++) {
                if (this.N[r][c] < 2 || this.N[r][c] > 3 ){
                  this.G[r][c] = 0;
                }
                else if(this.N[r][c] == 3){
                  this.G[r][c] = 1;
                }
    
            }
        }
        for (int c = 0; c < this.board.length; c++) {
          for (int r = 0; r < this.board[c].length; r++) {
              this.neighbor[c][r] = 0;
          }
        }
    }
}//end of GOL
